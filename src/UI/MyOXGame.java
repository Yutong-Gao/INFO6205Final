package UI;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

class MyOXGame extends JFrame implements ActionListener {
    //ä¸»ä½“éƒ¨åˆ†ï¼Œç»˜åˆ¶GUIï¼Œç¼–è¾‘æœ‰å…³å“?åº”
    JButton[] button;//å¯¹è±¡æ•°ç»„ï¼Œè¡¨ç¤ºæ£‹ç›˜ä¸Šçš„ä¹?ä¸ªæ ¼å­?
    JButton restart;//é‡?ç½®é”®
    JButton quit;//è¿”å›žä¸Šä¸€çº§
    JLabel judgement;//è£?åˆ¤ï¼Œç”¨æ?¥æ˜¾ç¤ºæ¸¸æˆ?çš„ç»“æžœ
    JPanel chessboard,basicPanel;//æ£‹ç›˜ï¼Œæ£‹ç›˜ä¸‹éƒ¨åŒºåŸŸ
    int player=0;//æ˜¾ç¤ºå½“å‰?çŽ©å®¶ç¼–å?·
    boolean gameOverFlag=false;//è®°å½•æ¸¸æˆ?æ˜¯å?¦ç»“æ?Ÿï¼Œå¦‚æžœç»“æ?Ÿå€¼ä¸ºtrueï¼Œå?œæ­¢å¯¹äº‹ä»¶çš„å“?åº”

    MyOXGame(){//ç”Ÿæˆ?å‡½æ•°ï¼Œç”Ÿæˆ?æ¸¸æˆ?
        setTitle("Menace Game");
        setBounds(500,500,300,300);//çª—ä½“åŸºæœ¬è®¾ç½®

        button=new JButton[10];
        restart=new JButton("Restart");
        quit=new JButton("Quit");
        chessboard=new JPanel();
        basicPanel=new JPanel();
        judgement=new JLabel("");
        chessboard.setLayout(new GridLayout(3,3));
        basicPanel.setLayout(new FlowLayout());//ç»„ä»¶åˆ?å§‹åŒ–è®¾ç½®


        add(chessboard,BorderLayout.CENTER);
        add(basicPanel,BorderLayout.SOUTH);
        basicPanel.add(restart);
        basicPanel.add(judgement);//å¸ƒå±€è®¾ç½®
        basicPanel.add(quit);

        initChessboard();//åˆ?å§‹åŒ–æ£‹ç›˜ï¼Œä½¿ä¹?ä¸ªæŒ‰é’®æŒ‰é¡ºåº?åŠ ä¸Š1-9çš„æ ‡ç­¾ï¼Œ
        addChessToChessboard(chessboard);//å°†ä¹?ä¸ªæŒ‰é’®æ·»åŠ è‡³chessboard
        restart.addActionListener(this);//æ·»åŠ ç›‘å?¬å™¨
        quit.addActionListener(this);

        buttonListener();//ä¸ºæŒ‰é’®æ·»åŠ ç›‘å?¬å™¨

        setVisible(true);//è®¾ç½®å?¯è§†åŒ–
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);//ä½¿å…³é—­é”®æœ‰ç”¨
    }

    private void addChessToChessboard(JPanel chessboard){
        //æ·»åŠ æŒ‰é’®è‡³æ£‹ç›˜
        for(int i=1;i<=9;i++) {
            chessboard.add(button[i]);
        }
    }

    private void initChessboard(){
        //ä½¿æ£‹å­?æŒ‰é’®åˆ?å§‹åŒ–ä¸º1-9
        for(int i=1;i<=9;i++){
            button[i]=new JButton(""+i);
            button[i].setFont(new Font("Arial",2,0));
        }
    }

    private void buttonListener(){
        //ä¸ºæ£‹å­?æŒ‰é’®æ·»åŠ ç›‘å?¬å™¨
        for(int i=1;i<=9;i++)
        {
            button[i].addActionListener(this);
        }
    }

    private void restartTheGame(){
        //é‡?ç½®æ¸¸æˆ?
        chessboard.removeAll();//å¿…é¡»äºŽrepaintå’ŒupdateUIä¸€èµ·ç”¨ä¸?ç„¶è¦?ä¸?å•¥éƒ½æ²¡æœ‰ï¼Œè¦?ä¸?æ²¡æœ‰æ”¹åŠ¨
        //å¿…é¡»æ³¨æ„?removllä¼šæ¸…ç©ºå¸ƒå±€
        chessboard.setLayout(new GridLayout(3,3));
        initChessboard();
        addChessToChessboard(chessboard);
        buttonListener();
        chessboard.updateUI();
        chessboard.repaint();

        judgement.setText("");
        gameOverFlag=false;
    }
    private boolean checkDogfall(char[] chess){
        //æ£€æŸ¥æ˜¯å?¦è¢«å¡«æ»¡ï¼Œå¡«æ»¡å?³ä¸ºå¹³å±€
        for(int i=1;i<chess.length;i++){
            if (chess[i]>='1'&&chess[i]<='9')
                return false;
        }
        return true;
    }

    private int checkWinner(int playerNow) {
        //æ£€æŸ¥å½“å‰?æ¸¸æˆ?çŠ¶æ€?ï¼Œ-2è¡¨ç¤ºæ²¡æœ‰å†³å‡ºèƒœè´Ÿï¼Œ-1è¡¨ç¤ºå¹³å±€ã€‚0è¡¨ç¤ºOçŽ©å®¶èƒœåˆ©ï¼Œ1è¡¨ç¤ºXçŽ©å®¶èƒœåˆ©
        char[] chess=new char[10];
        for(int i=1;i<=9;i++){
            chess[i]=button[i].getLabel().charAt(0);
        }
        if(     (chess[1]==chess[2]&&chess[2]==chess[3])||
                (chess[4]==chess[5]&&chess[5]==chess[6])||
                (chess[7]==chess[8]&&chess[8]==chess[9])||
                (chess[1]==chess[5]&&chess[5]==chess[9])||
                (chess[7]==chess[5]&&chess[5]==chess[3])||
                (chess[1]==chess[4]&&chess[4]==chess[7])||
                (chess[2]==chess[5]&&chess[5]==chess[8])||
                (chess[3]==chess[6]&&chess[6]==chess[9])){
            //åˆ¤æ–­å½“å‰?çŽ©å®¶æ˜¯å?¦ä¸ºèµ¢å®¶
            return playerNow;
        }
        else if(checkDogfall(chess))
            return -1;
        return -2;
    }

    @Override
    public void actionPerformed(ActionEvent actionEvent) {
        //å¯¹ç›‘å?¬çš„äº‹ä»¶è¿›è¡Œå“?åº”
        int statueCode;
        JButton buttonSource=(JButton)actionEvent.getSource();
        if(buttonSource==restart){
            //åˆ¤æ–­æ˜¯å?¦ä½¿restarté”®ï¼Œå¦‚æžœæ˜¯ï¼Œé‡?ç½®æ¸¸æˆ?
            restartTheGame();
        }
        if(buttonSource==quit)
        {
            setVisible(false);
            Inter inter=new Inter();
        }
        if (gameOverFlag==true) return;
        String buttonMark=buttonSource.getLabel();
        if(buttonMark.matches("[0-9]")){
            if(player==0) {
                buttonSource.setLabel("O");
                buttonSource.setFont(new Font("Arial",2,10));
            }
            else {
                buttonSource.setLabel("X");
                buttonSource.setFont(new Font("Arial",2,10));
            }
            statueCode=checkWinner(player);
            if(statueCode==0){
                judgement.setText("Player O wins the game! ");
                gameOverFlag=true;
            }
            else if(statueCode==1){
                judgement.setText("Player X wins the game!");
                gameOverFlag=true;
            }
            else if(statueCode==-1){
                judgement.setText("The game a draw!");
            }
            player=(player+1)%2;
        }
    }

}
